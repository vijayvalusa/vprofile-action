name: vprofile-actions
on:
  pull_request:
    branches:
      - main
    paths:
      - "vprofile-action/**"

  push:
    branches:
      - main
    paths:
      - "vprofile-action/**"
    tags:
      - "v*.*.*"

jobs:
  APP_TEST:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Java setup
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Maven build
        run: mvn clean install

      - name: Maven checkstyle
        run: mvn checkstyle:checkstyle

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=src/ \
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
            -Dsonar.junit.reportsPath=target/surefire-reports/ \
            -Dsonar.jacoco.reportsPath=target/jacoco.exec \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

      - name: Check Quality Gate result
        run: |
          if [ "${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" != "PASSED" ]; then
            echo "❌ Quality Gate failed"
            exit 1
          fi

  BUILD_AND_PUBLISH:
    needs: APP_TEST
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && github.event.base_ref == 'refs/heads/main'
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Extract version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Docker-files/app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vproapp:${{ env.VERSION }}
