name: vprofile-actions
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  APP_TEST:
    runs-on: ubuntu-latest
    steps:
    - name: Code checkout
      uses: actions/checkout@v3

    - name: Java setup
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Maven build
      run: mvn clean install

    - name: Maven checkstyle
      run: mvn checkstyle:checkstyle

    - name: Setup SonarQube
      uses: warchant/setup-sonar-scanner@v7

      # - name: SonarQube Scan
        # run: |
          # sonar-scanner \
            # -Dsonar.host.url=https://sonarcloud.io \
            # -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            # -Dsonar.organization=vprofile-actionsvv \
            # -Dsonar.projectKey=vprofile-vproapp25 \
            # -Dsonar.sources=src/ \
            # -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
            # -Dsonar.junit.reportsPath=target/surefire-reports/ \
            # -Dsonar.jacoco.reportsPath=target/jacoco.exec \
            # -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml

      # - name: SonarQube Quality Gate check
        # id: sonarqube-quality-gate-check
        # uses: sonarsource/sonarqube-quality-gate-action@master
        # env:
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

      # - name: Check Quality Gate result
        # run: |
          # if [ "${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" != "PASSED" ]; then
            # echo "‚ùå Quality Gate failed"
            # exit 1
          # fi
    
  
  BUILD_AND_PUBLISH:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: APP_TEST
    runs-on: ubuntu-latest
    steps:
    - name: Checkout tagged commit
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Docker-files/app/Docker-file
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vproapp:${{ github.run_number }}
